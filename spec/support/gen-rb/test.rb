#
# Autogenerated by Thrift Compiler (1.0.0-upfluence)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'test_types'

module Test
  class Client
    include ::Thrift::Client

    def foo(t1, t2)
      send_foo(t1, t2)
      return recv_foo()
    end

    def send_foo(t1, t2)
      send_message('foo', Foo_args, :t1 => t1, :t2 => t2)
    end

    def recv_foo()
      result = receive_message(Foo_result)
      return result.success unless result.success.nil?
      raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'foo failed: unknown result')
    end

    def bar(t1, t2)
      send_bar(t1, t2)
    end

    def send_bar(t1, t2)
      send_oneway_message('bar', Bar_args, :t1 => t1, :t2 => t2)
    end
  end

  class Processor
    include ::Thrift::Processor

    def process_foo(seqid, iprot, oprot)
      args = read_args(iprot, Foo_args)
      result = Foo_result.new()
      result.success = @handler.foo(args.t1, args.t2)
      write_result(result, oprot, 'foo', seqid)
    end

    def process_bar(seqid, iprot, oprot)
      args = read_args(iprot, Bar_args)
      @handler.bar(args.t1, args.t2)
      return
    end

  end

  # HELPER FUNCTIONS AND STRUCTURES

  class Foo_args
    include ::Thrift::Struct, ::Thrift::Struct_Union
    T1 = 1
    T2 = 2

    FIELDS = {
      T1 => {:type => ::Thrift::Types::I16, :name => 't1'},
      T2 => {:type => ::Thrift::Types::I16, :name => 't2'}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Foo_result
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SUCCESS = 0

    FIELDS = {
      SUCCESS => {:type => ::Thrift::Types::I16, :name => 'success'}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Bar_args
    include ::Thrift::Struct, ::Thrift::Struct_Union
    T1 = 1
    T2 = 2

    FIELDS = {
      T1 => {:type => ::Thrift::Types::I16, :name => 't1'},
      T2 => {:type => ::Thrift::Types::I16, :name => 't2'}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Bar_result
    include ::Thrift::Struct, ::Thrift::Struct_Union

    FIELDS = {

    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

end

